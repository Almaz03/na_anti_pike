#include <iostream>

using namespace std;

struct Token {
    char* p; // указатель на вхождение слова в строку
    int n;   // длина слова
};

int main() {
    char s[100];
    cin.getline(s, sizeof(s));

    int n = 0;
    char* p = s;
    Token tk = {NULL, 0};

    while(true) {
        // перемещаем указатель к следующему слову
        while((*p != '\0') && (*p == ' '))
            ++p;
        // если дошли до конца строки и ничего не нашли, завершаем цикл
        if(*p == '\0')
            break;
        // вычисляем длину текущего слова...
        n = 0;
        while((p[n] != '\0') && (p[n] != ' '))
            ++n;
        // ... и сравниваем её с длиной слова наибольшего на данный момент
        if(tk.n < n) {
            // если она оказалось больше, то текущее слово на данном этапе запоминается как наибольшее
            tk.p = p; tk.n = n;
        }
        // пропускаем текущее слово и продолжаем поиск...
        p += n;
    }

    cout << "Result: ";
    for(int i = 0; i < tk.n; ++i)
        cout << tk.p[i];
    cout << '\n';
}